<div class="container col-lg-8 col-11 mx-auto mt-2 mb-5">
  <h1 class="text-center">ドライブデータ投稿</h1>
  <% if @post.errors.any? %>
    <%= @post.errors.count %>件のエラーが発生しました
    <ul class="text-danger">
      <% @post.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  <% end %>
  <%= form_with model: @post, url: posts_path, method: :post do |f| %>
  <div class="mt-3 ml-4 form-group">
    <div class="row">
      <label class="pl-4 col-3">タイトル :</label>
      <span class="col-4"><%= f.text_field :title %></span>
    </div>
    <div class="row mt-2 mb-3">
      <label class="pl-4 col-3">TOP画像 :</label>
      <div class="col-9">
        <%= image_tag "/assets/no_fhoto.jpg", size: "200x200", id: :img_prev %>
        <%= f.file_field :image, id: :image, class: "mt-1" %>
      </div>
    </div>
    <div class="row">
      <label class="pl-4 col-3">注目ポイント :</label>
      <div class="field_with_errors col-8"><%= f.text_area :describe,:value =>"", id: :describe, class: "form-control" %></div>
    </div>
    <label class="mt-3 col-3">カテゴリ選択 :</label>
      <%= f.collection_select :category_id, Category.all, :id, :name %>
    <br />
    <label class="col-3">地方選択 :</label>
      <%= f.select :area, Post.areas.keys.map{|k| [t("enums.post.area.#{k}"), k] } %>
    <br />
    <label class="col-3">都道府県選択 :</label>
      <%= f.select :prefecture, Post.prefectures.keys.map{|k| [t("enums.post.prefecture.#{k}"), k] } %>
    <br />
    <div class="row">
      <label class="pl-4 col-3">地名 :</label>
      <span class="col-4"><%= f.text_field :location %></span>
    </div>
    <label class="col-3 mt-2">乗り物区分 :</label>
      <%= f.select :vehicle, Post.vehicles.keys.map{|k| [t("enums.post.vehicle.#{k}"), k] } %>
    <br />
    <h4 class="mt-3">
      ※必要に応じてピンの説明と画像を挿入してください。<br />
        一番上(0マーカー)には検索時のマーカー(数字なし赤色マーカー)の情報が入ります。<br />
        その下から、それぞれ1~4マーカーの情報を入力して下さい。
    </h4>
    
    <!-- iの初期値 -->
    <% i = -1 %>

    <%= f.fields_for :maps do |kf| %>
    <div class="border p-3 my-3">
      <label class="text-danger"><strong><%= i += 1 %>マーカー</strong></label>
        <!-- マーカーの緯度と経度は手動で弄られたくないので、画面上には表示しない -->
        <P hidden><%= kf.text_field :lat, value: 0 %></p>
        <p hidden><%= kf.text_field :lng, value: 0 %></p>
      <div class="row">
        <label class="col-3"><%= i %>マーカー地点の解説</label>
        <p class="col-7"><%= kf.text_area :marker_describe, class: "form-control" %></p>
      </div>
        <label class="col-3"><%= i %>マーカー地点の画像</label>
        <%= image_tag "/assets/no_fhoto.jpg", size: "50x50", id: "img_marker_prev_#{i}" %>
        <%= kf.file_field :marker_image, accept: "image/*", multiple: true %>
      <br />
    </div>
    <% end %>
    <!-- ラインの緯度と経度は画面上には表示しない -->
    <%= f.fields_for :map_lines do |lf| %>
      <div id = "lf-form" hidden>
        <p><%= lf.text_field :line_lat, value: 0 %></p>
        <P><%= lf.text_field :line_lng, value: 0 %></P>
      </div>
    <% end %>
  </div>
  
  <div class="bg-light p-2">
    <h2>Map</h2>
    <p>＊まず初めに、地名を検索をしてください。</p>
    <div class="row">
      <div class="col-5"><input id="address" class="form-control" placeholder="住所を入力してください"></div>
      <div class="col-2"><input type="button" value="検索" onclick="codeAddress()" disable="disable" class="rounded btn btn-success col-12"></div>
    </div>
    <p class="pt-1">
      <検索時のマーカーはドラック＆ドロップで位置の調整ができます。><br />
      <右クリックで1~4の画像と説明文を入れるマーカーを作成、もう一度右クリックで削除できます。(5つまで)><br />
      <左クリックで走行経路にマーカーを落として線を引けます。></p>
    <div id='map'></div>
    <style>
      #map {
        height: 700px;
        width: 100%;
      }
    </style>
    <div class="text-center mt-3 pb-3">
      <p class="text-center h5">＊下のボタンでラインの削除を行えます。</p>
      <span class="pr-4">
      　<input type="button" value="lineを全て削除" id="removeLine" class="btn btn-light border shadow" />
      </span>
      <sapn>
        <input type="button" value="lineを一つずつ削除" id="delLine" class="btn btn-light border shadow" />
      </span>
    </div>
  </div>
  
  <div class="row mt-5">
    <div class="col-3 text-center">
      <%= f.radio_button :is_deleted, :false %>
      <%= f.label :is_deleted, "公開" %> &nbsp;
      <%= f.radio_button :is_deleted, :true %>
      <%= f.label :is_deleted, "非公開" %>
    </div>
    <div class="text-center col-6">
      <%= f.submit "投稿", class: "btn btn-success col-12" %>
    </div>
  </div>
  <% end %>
</div>
  
<!-- 地図 -->
<script>
  //初期マップ、デフォルトの緯度と経度の設定
  let map
  function initMap(){
    geocoder = new google.maps.Geocoder()
    map = new google.maps.Map(document.getElementById('map'), {
      center:  {lat: 35.6803997, lng: 139.7690174},  //東京
      zoom: 15,
    });
    document.getElementById(`post_maps_attributes_${0}_lat`).value = 35.6803997;
    document.getElementById(`post_maps_attributes_${0}_lng`).value = 139.7690174; 
  }

  let geocoder
  let mainmarker
  let marker 
  let delCount = 0
  let aft
  let polyline
  let removeLine = document.getElementById("removeLine")
  let delLine = document.getElementById("delLine")
  let markers = [];
  let lineCoordinates = [];
  var linePath = null;
  let formNum = 0
  function codeAddress(){
  let inputAddress = document.getElementById('address').value;
  
    geocoder.geocode( { 'address': inputAddress}, function(results, status) {
      if (status == 'OK') {
        // trueになればマーカーを複製できないようにする
        if (aft == true){
          mainmarker.setMap(null);
        }
        //検索時にマーカーを作成する
        map.setCenter(results[0].geometry.location);
        mainmarker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location,
          draggable: true	// ドラッグ可能にする
        });
          
         //右クリックでさらにマーカーを作成
        map.addListener('rightclick', function(e){
          for(let i = 1; i < 5; i++) {
            if (document.getElementById(`post_maps_attributes_${i}_lat`).value == 0 )  {
              var marker = new google.maps.Marker({
                position: e.latLng,
                map: map,
                icon: 'https://maps.google.com/mapfiles/kml/paddle/'+ i.toString() +'.png',
                animation: google.maps.Animation.DROP
              });
          
            if (document.getElementById(`post_maps_attributes_${i}_lat`).value != 0) {
              marker.setMap(null); 
              return; 
            }
          
          // 5回処理を繰り返す
            document.getElementById(`post_maps_attributes_${i}_lat`).value = e.latLng.lat();
            document.getElementById(`post_maps_attributes_${i}_lng`).value = e.latLng.lng(); 
            break; 
          }
        }
            
        //追加したマーカーの削除
        marker.addListener('rightclick', function(){ 
          for(let i = 1; i < 5; i++){
            if (document.getElementById(`post_maps_attributes_${i}_lat`).value == e.latLng.lat()) {
              delCount += 1
              marker.setMap(null); 
              document.getElementById(`post_maps_attributes_${i}_lat`).value = 0
              document.getElementById(`post_maps_attributes_${i}_lng`).value = 0 
            }
          }
        });
      });
          
      //ここでメインマーカーは複製されない様にする処理を走らせる
      aft = true
      //検索した時に緯度経度を入力する
      document.getElementById('post_maps_attributes_0_lat').value = results[0].geometry.location.lat();
      document.getElementById('post_maps_attributes_0_lng').value = results[0].geometry.location.lng(); 
      
      // メインマーカーのドロップ（ドラッグ終了）時のイベント
      google.maps.event.addListener( mainmarker, 'dragend', function(ev){
        document.getElementById('post_maps_attributes_0_lat').value = ev.latLng.lat();
        document.getElementById('post_maps_attributes_0_lng').value = ev.latLng.lng();
      });
      
    // 以下ライン作成・削除処理  
      // ボタンで発火。lineを全て削除
      removeLine.addEventListener('click', function() {
        for (var i = markers.length - 1; i >= 0; i--) {
          removeMarker(i);
          document.getElementById(`post_map_lines_attributes_${i}_line_lat`).value = 0
          document.getElementById(`post_map_lines_attributes_${i}_line_lng`).value = 0
        }
      });
      // ボタンで発火。最後に引いたlineを一つ削除
      delLine.addEventListener("click", eventDelLine, false);
      
      //line用のマーカーを作成
      map.addListener('click', function(e){
        // lineMarkerが打たれると同時にフォームを増やす処理
        const formList = document.getElementById("lf-form")
        formNum += 1
        const html = `<div id="lf-form" hidden>
                        <input id="post_map_lines_attributes_${formNum}_line_lat" type="text" name="post[map_lines_attributes][${formNum}][line_lat]">  
                        <input id="post_map_lines_attributes_${formNum}_line_lng" type="text" name="post[map_lines_attributes][${formNum}][line_lng]">
                      </div>`;
        formList.insertAdjacentHTML('beforeend', html);
        // lineMarker作成
        let marker = new google.maps.Marker({
          position: e.latLng,
          map: map,
          animation: google.maps.Animation.DROP,
          icon: {
            url: 'data:image/svg+xml;utf-8,' + encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="50" fill="black"/></svg>'),
            scaledSize: new google.maps.Size(10, 10)
          }
        });
        markers.push(marker);
        createLine();
      });
        
      } else 
        { alert('該当する結果がありませんでした：' + status); }
    }); 
  }
  
  //以下line作成と削除の処理
  function eventDelLine() {
    removeMarker(markers.length - 1);
  }
  
  function removeMarker( index ) {
    markers[index].setMap(null);
    markers.splice(index, 1); // markerの要素を削除
    document.getElementById(`post_map_lines_attributes_${index}_line_lat`).value = 0
    document.getElementById(`post_map_lines_attributes_${index}_line_lng`).value = 0
    createLine();
  }

  function findMarker(latLngString) {
    for (var i = 0;i < markers.length;i++) {
      if (latLngString == markers[i].position.toString()) {
        return i;
      }
    }
    return -1;
  }

  function createLine() {
    // 線をすべて削除
    if (linePath != null) {
      linePath.setMap(null);
    }
    lineCoordinates.length = 0;

    // 線を引き直す
    for (var i = 0; i < markers.length;i++) {
      document.getElementById(`post_map_lines_attributes_${i}_line_lat`).value = markers[i].position.lat();
      document.getElementById(`post_map_lines_attributes_${i}_line_lng`).value = markers[i].position.lng();
      
      // クリックされたら削除の処理
      markers[i].addListener('click', function(e) {
        var index = findMarker(e.latLng.toString());
        console.log(index.toString());
        if (index == -1) { 
          document.getElementById(`post_map_lines_attributes_${i}_line_lat`).value = 0
          document.getElementById(`post_map_lines_attributes_${i}_line_lng`).value = 0
          return; }
        removeMarker(index);
      }, false);
      lineCoordinates.push(new google.maps.LatLng(document.getElementById(`post_map_lines_attributes_${i}_line_lat`).value, document.getElementById(`post_map_lines_attributes_${i}_line_lng`).value));
    }

    if (lineCoordinates.length > 1) {
      linePath = new google.maps.Polyline({
        map: map,
        path: lineCoordinates,
        strokeColor: "#FF0000",
        strokeOpacity: 1.0,
        strokeWeight: 2
      });
    }
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API'] %>&callback=initMap" async defer></script>
  
<!--画像プレビュー表示処理-->
<script type="text/javascript">
  //Top画像 
  let reader = new FileReader();
  $(function() {
    function readURL(input) {
      if (input.files && input.files[0]) {
        reader.onload = function (e) {
          $('#img_prev').attr('src', e.target.result);
        }
        reader.readAsDataURL(input.files[0]);
      }
    }
    $("#image").change(function(){
      readURL(this);
    });
  });
  
  //マーカー画像  
  $ (function() {
    for (let i = 0; i < 5; i++){
      var file = document.querySelector('input[type=file]').files[0];
      function readURL(input, file) { 
        if (input.files && input.files[0]) {
          reader.onload = function (e) {
            $(`#img_marker_prev_${i}`).attr('src', e.target.result);
          }
          reader.readAsDataURL(input.files[0]);
        }
      }
      $(`#post_maps_attributes_${i}_marker_image`).change(function(){
        readURL(this);
      });
    }
  });
</script>