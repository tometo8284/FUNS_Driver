<div class="container mx-auto mt-2">
  <div class= "text-center">
    <%= flash[:notice] %><br />
    <h1><%= @post.title %></h1>
    <%= image_tag @post.get_image, size: "200x200" %>
    <br />
    <% if @user == current_user %>
      <strong><%= @post.is_deleted?? '非公開' : '公開' %></strong>
    <% end %>
  </div>
  <table class="table bg-light rounded">
    <tr>
      <th>投稿者</th>
      <td>
        <%= link_to user_path(@user) do %>
          <%= @post.user.nick_name %>
        <% end %>
      </td>
    </tr>
    <tr>
      <th>投稿日</th>
      <td><%= @post.created_at.strftime('%Y/%m/%d') %></td>
    </tr>
    <tr>
      <th>ドライブメモ</th>
      <td><%= @post.describe %></td>
    </tr>
    <tr>
      <th>カテゴリ</th>
      <td><%= @post.category.name %></td>
    </tr>
    <tr>
      <th>エリア</th>
      <td><%= @post.area_i18n %></td>
　　　<td><%= @post.prefecture_i18n %></td>
　　　<td><%= @post.location %></td>
    </tr>
    <tr>
      <th>乗り物区分</th>
      <td><%= @post.vehicle_i18n %></td>
    </tr>
  </table>
  
  <div id='map'></div>
  <style>
    #map {
      height: 600px;
      width: 100%;
    }
  </style>
  <script>
    let map
    let geocoder
    let marker = [];
    let lineMarker = [];
    let infoWindow = [];
    let polyline
    let markerData = <%== @post.maps.map {|o| { lat: o['lat'], lng: o['lng'] } }.to_json %>
    let imageData = <%== @post.maps.map {|o| { get_marker_image: rails_representation_path(o.get_marker_image) }}.to_json %>
    let describeData = <%== @post.maps.map {|o| { marker_describe: o['marker_describe'] }}.to_json %>
    let lineData = <%== @post.map_lines.map {|o| { line_lat: o['line_lat'], line_lng: o['line_lng'] } }.to_json %>
    function initMap() {
      //初期表示位置
      geocoder = new google.maps.Geocoder()
      map = new google.maps.Map(document.getElementById('map'), {
        center: markerData[0],
        zoom: 13
      });
      
      //markerDataからvalue 0を省く処理
      let markerDataShow = markerData.filter(v=> v.lat != 0)
      for(let i = 0; i < markerDataShow.length; i++) {
        // 各地点の緯度経度を算出 
        markerLatLng = new google.maps.LatLng({
          lat: markerDataShow[i]['lat'],
          lng: markerDataShow[i]['lng']
        });
       
        // 各地点のマーカーを作成
        marker[i] = new google.maps.Marker({
          position: markerLatLng,
          map: map
        });
        
        // 吹き出しの内容
        infoWindow[i] = new google.maps.InfoWindow({
          content: '<img src="' + imageData[i]['get_marker_image'] + '"><div class="sample">' + describeData[i]['marker_describe'] + '</div>'
        }); 
      
        markerEvent(i);
        function markerEvent(i) {
          marker[i].addListener('click', function () {
            infoWindow[i].open(map, marker[i]);
          });
        }
      }
      
      //line作成処理
      for (let i = 1; i < lineData.length; i++) {
        let lineDataLast = lineData.filter(v=> v.line_lat != 0)
        lineMarkerLatLngS = new google.maps.LatLng({
          lat: lineDataLast.slice(0,1)[0]['line_lat'],
          lng: lineDataLast.slice(0,1)[0]['line_lng']
        });
        
        lineMarkerLatLngF = new google.maps.LatLng({
          lat: lineDataLast.slice(-1)[0]['line_lat'],
          lng: lineDataLast.slice(-1)[0]['line_lng']
        });
        
        
        lineMarkerS = new google.maps.Marker({
          position: lineMarkerLatLngS,
          map: map,
          icon: 'https://maps.google.com/mapfiles/kml/paddle/S.png'
        });
        
        lineMarkerF = new google.maps.Marker({
          position: lineMarkerLatLngF,
          map: map,
          icon: {
            url: 'https://maps.google.com/mapfiles/kml/pal2/icon13.png',
            scaledSize: new google.maps.Size(50, 50)
          }
        });
      
        var lineCoordinates = [];
        for (let j = 0; j < lineData.length; j++){
          if (lineData[j]['line_lat'] != 0 && lineData[j]['line_lng'] != 0 ) {
            lineCoordinates.push(new google.maps.LatLng(lineData[j]['line_lat'], lineData[j]['line_lng']))
          }
        }
        
        let linePath = new google.maps.Polyline({
          map: map,
          path: lineCoordinates,
          strokeColor: "#FF0000",
          strokeOpacity: 1.0,
          strokeWeight: 2
        });
      }
    }
  
  </script>
  <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API'] %>&callback=initMap" async defer></script>

  <% if @user == current_user %>
  <div class="mt-3 text-center">
    <%= link_to "編集", edit_post_path(@post.id), class: 'btn btn-secondary col-3' %>
    <%= link_to "削除", post_path(@post.id), method: :delete, data: { confirm: "本当に削除しますか？" }, class: 'btn btn-danger ml-5 col-1' %>
  </div>
  <% end %>
  
  <div class="text-right">
    <% if user_signed_in? %>
      <% if @post.fav_by?(current_user) %>
        <p class="">
          <%= link_to post_favs_path(@post), method: :delete do %>
            <i class="fas fa-heart"></i> <%= @post.favs.count %> いいね
          <% end %>
        </p>
      <% else %>
        <p>
          <%= link_to post_favs_path(@post), method: :post do %>
            <i class="far fa-heart"></i> <%= @post.favs.count %> いいね
          <% end %>
        </p>
      <% end %>
    <% else %>
      <i class="fas fa-heart"></i> <%= @post.favs.count %> いいね
    <% end %>
    <p>コメント件数 : <%= @post.comments.count %></p>
  </div>
  <div class="text-center"> 
    <% @post.comments.each do |comment| %>
    <div class="row bg-light py-3 m-2 rounded-pill">
      <div class="col-2">
      <%= link_to user_path(comment.user) do %>
        <%= image_tag comment.user.get_profile_image, size: "60x60" %><br />
        <%= comment.user.nick_name %>
      <% end %>
      </div>
      <div class="text-left col-10">
        <p>: <strong><%= comment.post_comment %></strong></p>
        <span><%= comment.created_at.strftime('%Y/%m/%d') %></span>
        <% if comment.user == current_user %>
          <%= link_to "削除", post_comment_path(comment.post, comment.id), method: :delete %>
        <% end %>
      </div>
    </div>
    <% end %>
      
    <% if user_signed_in? %>
      <%= form_with model: [@post, @comment] do |f| %>
        <div class="row mt-3 mx-auto">
          <div class="pl-3 col-6"><%= f.text_area :post_comment, placeholder: "コメントをここに", class: "form-control" %></div>
          <div class="col-1 my-auto"><%= f.submit "送信する" , class: "btn btn-success" %></div>
        </div>
      <% end %>
    <% end %>
  </div>
</div>

