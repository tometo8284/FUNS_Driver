<h1><%= @post.title %>の編集</h1>
<%= form_with model: @post, url: post_path(@post.id), method: :patch do |f| %>
<label>タイトル</label>
  <%= f.text_field :title, autofocus: true %>
<br />
<label>TOP画像</label>
  <%= f.file_field :image %>
<br />
<label>説明</label>
  <%= f.text_area :describe, autofocus: true %>
<br />
<label>カテゴリ選択</label>
  <%= f.collection_select :category_id, Category.all, :id, :name, autofocus: true %>
<br />
<label>地方選択</label>
  <%= f.select :area, Post.areas.keys.map{|k| [t("enums.post.area.#{k}"), k] }, autofocus: true %>
<br />
<label>都道府県選択</label>
  <%= f.select :prefecture, Post.prefectures.keys.map{|k| [t("enums.post.prefecture.#{k}"), k] }, autofocus: true %>
<br />
<label>地名</label>
  <%= f.text_field :location, autofocus: true %>
<br />
<%= f.fields_for :maps do |kf| %>
    <label>緯度</label>
      <%= kf.text_field :lat, autofocus: true %>
    <label>経度</label>
      <%= kf.text_field :lng, autofocus: true %> 
    <%= kf.file_field :marker_image, multiple: true %>
    <br />
    <label>マーカーの説明</label>
      <%= kf.text_area :marker_describe, autofocus: true %>
    <br />
    <% end %>
<label>乗り物区分</label>
  <%= f.select :vehicle, Post.vehicles.keys.map{|k| [t("enums.post.vehicle.#{k}"), k] }, autofocus: true %> 
<br />
  <%= f.radio_button :is_deleted, :false %>
  <%= f.label :is_deleted, "公開" %> &nbsp;
  <%= f.radio_button :is_deleted, :true %>
  <%= f.label :is_deleted, "非公開" %>
<br />

<h2>Map</h2>
    <input id="address" type="textbox" placeholder="住所を入力">
    <input type="button" value="検索" onclick="codeAddress()">
    <p>赤色マーカーをドラック＆ドロップで位置の調整ができます。<br />
    右クリックで黄色マーカー<p>
    <div id='map'></div>

 <style>
    #map {
      height: 600px;
      width: 1000px;
    }
  </style>

 <script>
    let map
    let geocoder
    let marker = [];
    let infoWindow = [];
    let aft 
    let markerData = <%== @post.maps.map {|o| { lat: o['lat'], lng: o['lng'] } }.to_json %>
    let imageData = <%== @post.maps.map {|o| { get_marker_image: rails_representation_path(o.get_marker_image) }}.to_json %>
    let describeData = <%== @post.maps.map {|o| { marker_describe: o['marker_describe'] }}.to_json %>
    let delCount = 0
    // markerData.filter(v=> v.lat != 0)

    function initMap() {
      //初期表示位置
       
      geocoder = new google.maps.Geocoder()
      map = new google.maps.Map(document.getElementById('map'), {
        center: markerData[0],
        zoom: 13
      });
      
      //以下メインマーカー
      let id = markerData[0]['id']
      markerLatLng = new google.maps.LatLng({
        lat: markerData[0]['lat'],
        lng: markerData[0]['lng']
      });
      
      marker[0] = new google.maps.Marker({
        position: markerLatLng,
        map: map,
        draggable: true
      });
      
      infoWindow[0] = new google.maps.InfoWindow({
        content: '<img src="' + imageData[0]['get_marker_image'] + '"><div class="sample">' + describeData[0]['marker_describe'] + '</div>'
      }); 
      marker[0].addListener('click', function () {
        infoWindow[0].open(map, marker[0]);
        });   
      //ここまで
      
      
      // 以下メインマーカー以外の挙動
      for(let i = 1; i < markerData.length; i++) {
        let id = markerData[i]['id']
      markerLatLng = new google.maps.LatLng({
        lat: markerData[i]['lat'],
        lng: markerData[i]['lng']
      });
　　　//debugger
      marker[i] = new google.maps.Marker({
        position: markerLatLng,
        map: map,
        icon: 'https://maps.google.com/mapfiles/kml/paddle/'+ i.toString() +'.png' ,
        draggable: true
      });
      
      infoWindow[i] = new google.maps.InfoWindow({
        content: '<img src="' + imageData[i]['get_marker_image'] + '"><div class="sample">' + describeData[i]['marker_describe'] + '</div>'
      }); 
       
         
      markerEvent(i);
      function markerEvent(i) {
        marker[i].addListener('click', function () {
        infoWindow[i].open(map, marker[i]);
        }); 
      } 
      
      marker[i].addListener('rightclick', function(){  
        marker[i].setMap(null); 
          document.getElementById(`post_maps_attributes_${i}_lat`).value = 0
          document.getElementById(`post_maps_attributes_${i}_lng`).value = 0 
        });
      }
      
      // 全てのマーカーのドラッグ終了時の緯度経度計測
      for(let i = 0; i < 5; i++) {
        google.maps.event.addListener( marker[i], 'dragend', function(ev){
          document.getElementById(`post_maps_attributes_${i}_lat`).value = ev.latLng.lat();
          document.getElementById(`post_maps_attributes_${i}_lng`).value = ev.latLng.lng(); 
        });
      }
        
      // 以下追加したマーカーの挙動
        map.addListener('rightclick', function(e){ 
          for(var i = 1; i < 5; i++){ 
            if (document.getElementById(`post_maps_attributes_${i}_lat`).value == 0 )  { 
            var marker = new google.maps.Marker({
            position: e.latLng,
            map: map,
            icon: 'https://maps.google.com/mapfiles/kml/paddle/'+ i.toString() +'.png',
            animation: google.maps.Animation.DROP
            });
                document.getElementById(`post_maps_attributes_${i}_lat`).value = e.latLng.lat();
                document.getElementById(`post_maps_attributes_${i}_lng`).value = e.latLng.lng();
            i = 5;}
            
            else if(document.getElementById(`post_maps_attributes_${i}_lat`).value === e.latLng.lat()) { 
            marker.setMap(null); }
            }
          
            marker.addListener('rightclick', function (){ 
            for(let i = 1; i < 5; i++) {
              if (document.getElementById(`post_maps_attributes_${i}_lat`).value == e.latLng.lat()) {
                 delCount += 1
                 marker.setMap(null); 
                 document.getElementById(`post_maps_attributes_${i}_lat`).value = 0
                 document.getElementById(`post_maps_attributes_${i}_lng`).value = 0 
                 } 
              
            }
                 
            });
        });
      
       
      
    }
    
    
    
    
  </script>
  <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API'] %>&callback=initMap" async defer></script>

<%= f.submit "変更を保存" %>
<% end %>

<%= link_to "戻る", post_path(@post) %>